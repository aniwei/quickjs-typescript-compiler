// This file is auto-generated by scripts/getEnv.ts
// Do not edit manually.
// Generated at: 2025-09-24T11:16:24.529Z

export enum CompiledFlags {
  COMPILED_FLAG_NONE = 0,
  COMPILED_FLAG_DUMP = 1 << 0,
  COMPILED_FLAG_BIGNUM = 1 << 1,
}

export enum OpFormat {
  none = 0,
  none_int = 1,
  none_loc = 2,
  none_arg = 3,
  none_var_ref = 4,
  u8 = 5,
  i8 = 6,
  loc8 = 7,
  const8 = 8,
  label8 = 9,
  u16 = 10,
  i16 = 11,
  label16 = 12,
  npop = 13,
  npopx = 14,
  npop_u16 = 15,
  loc = 16,
  arg = 17,
  var_ref = 18,
  u32 = 19,
  i32 = 20,
  const = 21,
  label = 22,
  atom = 23,
  atom_u8 = 24,
  atom_u16 = 25,
  atom_label_u8 = 26,
  atom_label_u16 = 27,
  label_u16 = 28,
}

export enum Opcode {
  OP_invalid = 0,
  OP_push_i32 = 1,
  OP_push_const = 2,
  OP_fclosure = 3,
  OP_push_atom_value = 4,
  OP_private_symbol = 5,
  OP_undefined = 6,
  OP_null = 7,
  OP_push_this = 8,
  OP_push_false = 9,
  OP_push_true = 10,
  OP_object = 11,
  OP_special_object = 12,
  OP_rest = 13,
  OP_drop = 14,
  OP_nip = 15,
  OP_nip1 = 16,
  OP_dup = 17,
  OP_dup1 = 18,
  OP_dup2 = 19,
  OP_dup3 = 20,
  OP_insert2 = 21,
  OP_insert3 = 22,
  OP_insert4 = 23,
  OP_perm3 = 24,
  OP_perm4 = 25,
  OP_perm5 = 26,
  OP_swap = 27,
  OP_swap2 = 28,
  OP_rot3l = 29,
  OP_rot3r = 30,
  OP_rot4l = 31,
  OP_rot5l = 32,
  OP_call_constructor = 33,
  OP_call = 34,
  OP_tail_call = 35,
  OP_call_method = 36,
  OP_tail_call_method = 37,
  OP_array_from = 38,
  OP_apply = 39,
  OP_return = 40,
  OP_return_undef = 41,
  OP_check_ctor_return = 42,
  OP_check_ctor = 43,
  OP_init_ctor = 44,
  OP_check_brand = 45,
  OP_add_brand = 46,
  OP_return_async = 47,
  OP_throw = 48,
  OP_throw_error = 49,
  OP_eval = 50,
  OP_apply_eval = 51,
  OP_regexp = 52,
  OP_get_super = 53,
  OP_import = 54,
  OP_check_var = 55,
  OP_get_var_undef = 56,
  OP_get_var = 57,
  OP_put_var = 58,
  OP_put_var_init = 59,
  OP_put_var_strict = 60,
  OP_get_ref_value = 61,
  OP_put_ref_value = 62,
  OP_define_var = 63,
  OP_check_define_var = 64,
  OP_define_func = 65,
  OP_get_field = 66,
  OP_get_field2 = 67,
  OP_put_field = 68,
  OP_get_private_field = 69,
  OP_put_private_field = 70,
  OP_define_private_field = 71,
  OP_get_array_el = 72,
  OP_get_array_el2 = 73,
  OP_get_array_el3 = 74,
  OP_put_array_el = 75,
  OP_get_super_value = 76,
  OP_put_super_value = 77,
  OP_define_field = 78,
  OP_set_name = 79,
  OP_set_name_computed = 80,
  OP_set_proto = 81,
  OP_set_home_object = 82,
  OP_define_array_el = 83,
  OP_append = 84,
  OP_copy_data_properties = 85,
  OP_define_method = 86,
  OP_define_method_computed = 87,
  OP_define_class = 88,
  OP_define_class_computed = 89,
  OP_get_loc = 90,
  OP_put_loc = 91,
  OP_set_loc = 92,
  OP_get_arg = 93,
  OP_put_arg = 94,
  OP_set_arg = 95,
  OP_get_var_ref = 96,
  OP_put_var_ref = 97,
  OP_set_var_ref = 98,
  OP_set_loc_uninitialized = 99,
  OP_get_loc_check = 100,
  OP_put_loc_check = 101,
  OP_put_loc_check_init = 102,
  OP_get_loc_checkthis = 103,
  OP_get_var_ref_check = 104,
  OP_put_var_ref_check = 105,
  OP_put_var_ref_check_init = 106,
  OP_close_loc = 107,
  OP_if_false = 108,
  OP_if_true = 109,
  OP_goto = 110,
  OP_catch = 111,
  OP_gosub = 112,
  OP_ret = 113,
  OP_nip_catch = 114,
  OP_to_object = 115,
  OP_to_propkey = 116,
  OP_with_get_var = 117,
  OP_with_put_var = 118,
  OP_with_delete_var = 119,
  OP_with_make_ref = 120,
  OP_with_get_ref = 121,
  OP_make_loc_ref = 122,
  OP_make_arg_ref = 123,
  OP_make_var_ref_ref = 124,
  OP_make_var_ref = 125,
  OP_for_in_start = 126,
  OP_for_of_start = 127,
  OP_for_await_of_start = 128,
  OP_for_in_next = 129,
  OP_for_of_next = 130,
  OP_for_await_of_next = 131,
  OP_iterator_check_object = 132,
  OP_iterator_get_value_done = 133,
  OP_iterator_close = 134,
  OP_iterator_next = 135,
  OP_iterator_call = 136,
  OP_initial_yield = 137,
  OP_yield = 138,
  OP_yield_star = 139,
  OP_async_yield_star = 140,
  OP_await = 141,
  OP_neg = 142,
  OP_plus = 143,
  OP_dec = 144,
  OP_inc = 145,
  OP_post_dec = 146,
  OP_post_inc = 147,
  OP_dec_loc = 148,
  OP_inc_loc = 149,
  OP_add_loc = 150,
  OP_not = 151,
  OP_lnot = 152,
  OP_typeof = 153,
  OP_delete = 154,
  OP_delete_var = 155,
  OP_mul = 156,
  OP_div = 157,
  OP_mod = 158,
  OP_add = 159,
  OP_sub = 160,
  OP_pow = 161,
  OP_shl = 162,
  OP_sar = 163,
  OP_shr = 164,
  OP_lt = 165,
  OP_lte = 166,
  OP_gt = 167,
  OP_gte = 168,
  OP_instanceof = 169,
  OP_in = 170,
  OP_eq = 171,
  OP_neq = 172,
  OP_strict_eq = 173,
  OP_strict_neq = 174,
  OP_and = 175,
  OP_xor = 176,
  OP_or = 177,
  OP_is_undefined_or_null = 178,
  OP_private_in = 179,
  OP_push_bigint_i32 = 180,
  OP_nop = 181,
  OP_push_minus1 = 182,
  OP_push_0 = 183,
  OP_push_1 = 184,
  OP_push_2 = 185,
  OP_push_3 = 186,
  OP_push_4 = 187,
  OP_push_5 = 188,
  OP_push_6 = 189,
  OP_push_7 = 190,
  OP_push_i8 = 191,
  OP_push_i16 = 192,
  OP_push_const8 = 193,
  OP_fclosure8 = 194,
  OP_push_empty_string = 195,
  OP_get_loc8 = 196,
  OP_put_loc8 = 197,
  OP_set_loc8 = 198,
  OP_get_loc0 = 199,
  OP_get_loc1 = 200,
  OP_get_loc2 = 201,
  OP_get_loc3 = 202,
  OP_put_loc0 = 203,
  OP_put_loc1 = 204,
  OP_put_loc2 = 205,
  OP_put_loc3 = 206,
  OP_set_loc0 = 207,
  OP_set_loc1 = 208,
  OP_set_loc2 = 209,
  OP_set_loc3 = 210,
  OP_get_arg0 = 211,
  OP_get_arg1 = 212,
  OP_get_arg2 = 213,
  OP_get_arg3 = 214,
  OP_put_arg0 = 215,
  OP_put_arg1 = 216,
  OP_put_arg2 = 217,
  OP_put_arg3 = 218,
  OP_set_arg0 = 219,
  OP_set_arg1 = 220,
  OP_set_arg2 = 221,
  OP_set_arg3 = 222,
  OP_get_var_ref0 = 223,
  OP_get_var_ref1 = 224,
  OP_get_var_ref2 = 225,
  OP_get_var_ref3 = 226,
  OP_put_var_ref0 = 227,
  OP_put_var_ref1 = 228,
  OP_put_var_ref2 = 229,
  OP_put_var_ref3 = 230,
  OP_set_var_ref0 = 231,
  OP_set_var_ref1 = 232,
  OP_set_var_ref2 = 233,
  OP_set_var_ref3 = 234,
  OP_get_length = 235,
  OP_if_false8 = 236,
  OP_if_true8 = 237,
  OP_goto8 = 238,
  OP_goto16 = 239,
  OP_call0 = 240,
  OP_call1 = 241,
  OP_call2 = 242,
  OP_call3 = 243,
  OP_is_undefined = 244,
  OP_is_null = 245,
  OP_typeof_is_undefined = 246,
  OP_typeof_is_function = 247,
  OP_get_field_ic = 248,
  OP_get_field2_ic = 249,
  OP_put_field_ic = 250,
  OP_debugger = 251,
}

export const OPCODE_NAME_TO_CODE: Record<string, number> = {
  "invalid": 0,
  "push_i32": 1,
  "push_const": 2,
  "fclosure": 3,
  "push_atom_value": 4,
  "private_symbol": 5,
  "undefined": 6,
  "null": 7,
  "push_this": 8,
  "push_false": 9,
  "push_true": 10,
  "object": 11,
  "special_object": 12,
  "rest": 13,
  "drop": 14,
  "nip": 15,
  "nip1": 16,
  "dup": 17,
  "dup1": 18,
  "dup2": 19,
  "dup3": 20,
  "insert2": 21,
  "insert3": 22,
  "insert4": 23,
  "perm3": 24,
  "perm4": 25,
  "perm5": 26,
  "swap": 27,
  "swap2": 28,
  "rot3l": 29,
  "rot3r": 30,
  "rot4l": 31,
  "rot5l": 32,
  "call_constructor": 33,
  "call": 34,
  "tail_call": 35,
  "call_method": 36,
  "tail_call_method": 37,
  "array_from": 38,
  "apply": 39,
  "return": 40,
  "return_undef": 41,
  "check_ctor_return": 42,
  "check_ctor": 43,
  "init_ctor": 44,
  "check_brand": 45,
  "add_brand": 46,
  "return_async": 47,
  "throw": 48,
  "throw_error": 49,
  "eval": 50,
  "apply_eval": 51,
  "regexp": 52,
  "get_super": 53,
  "import": 54,
  "check_var": 55,
  "get_var_undef": 56,
  "get_var": 57,
  "put_var": 58,
  "put_var_init": 59,
  "put_var_strict": 60,
  "get_ref_value": 61,
  "put_ref_value": 62,
  "define_var": 63,
  "check_define_var": 64,
  "define_func": 65,
  "get_field": 66,
  "get_field2": 67,
  "put_field": 68,
  "get_private_field": 69,
  "put_private_field": 70,
  "define_private_field": 71,
  "get_array_el": 72,
  "get_array_el2": 73,
  "get_array_el3": 74,
  "put_array_el": 75,
  "get_super_value": 76,
  "put_super_value": 77,
  "define_field": 78,
  "set_name": 79,
  "set_name_computed": 80,
  "set_proto": 81,
  "set_home_object": 82,
  "define_array_el": 83,
  "append": 84,
  "copy_data_properties": 85,
  "define_method": 86,
  "define_method_computed": 87,
  "define_class": 88,
  "define_class_computed": 89,
  "get_loc": 90,
  "put_loc": 91,
  "set_loc": 92,
  "get_arg": 93,
  "put_arg": 94,
  "set_arg": 95,
  "get_var_ref": 96,
  "put_var_ref": 97,
  "set_var_ref": 98,
  "set_loc_uninitialized": 99,
  "get_loc_check": 100,
  "put_loc_check": 101,
  "put_loc_check_init": 102,
  "get_loc_checkthis": 103,
  "get_var_ref_check": 104,
  "put_var_ref_check": 105,
  "put_var_ref_check_init": 106,
  "close_loc": 107,
  "if_false": 108,
  "if_true": 109,
  "goto": 110,
  "catch": 111,
  "gosub": 112,
  "ret": 113,
  "nip_catch": 114,
  "to_object": 115,
  "to_propkey": 116,
  "with_get_var": 117,
  "with_put_var": 118,
  "with_delete_var": 119,
  "with_make_ref": 120,
  "with_get_ref": 121,
  "make_loc_ref": 122,
  "make_arg_ref": 123,
  "make_var_ref_ref": 124,
  "make_var_ref": 125,
  "for_in_start": 126,
  "for_of_start": 127,
  "for_await_of_start": 128,
  "for_in_next": 129,
  "for_of_next": 130,
  "for_await_of_next": 131,
  "iterator_check_object": 132,
  "iterator_get_value_done": 133,
  "iterator_close": 134,
  "iterator_next": 135,
  "iterator_call": 136,
  "initial_yield": 137,
  "yield": 138,
  "yield_star": 139,
  "async_yield_star": 140,
  "await": 141,
  "neg": 142,
  "plus": 143,
  "dec": 144,
  "inc": 145,
  "post_dec": 146,
  "post_inc": 147,
  "dec_loc": 148,
  "inc_loc": 149,
  "add_loc": 150,
  "not": 151,
  "lnot": 152,
  "typeof": 153,
  "delete": 154,
  "delete_var": 155,
  "mul": 156,
  "div": 157,
  "mod": 158,
  "add": 159,
  "sub": 160,
  "pow": 161,
  "shl": 162,
  "sar": 163,
  "shr": 164,
  "lt": 165,
  "lte": 166,
  "gt": 167,
  "gte": 168,
  "instanceof": 169,
  "in": 170,
  "eq": 171,
  "neq": 172,
  "strict_eq": 173,
  "strict_neq": 174,
  "and": 175,
  "xor": 176,
  "or": 177,
  "is_undefined_or_null": 178,
  "private_in": 179,
  "push_bigint_i32": 180,
  "nop": 181,
  "push_minus1": 182,
  "push_0": 183,
  "push_1": 184,
  "push_2": 185,
  "push_3": 186,
  "push_4": 187,
  "push_5": 188,
  "push_6": 189,
  "push_7": 190,
  "push_i8": 191,
  "push_i16": 192,
  "push_const8": 193,
  "fclosure8": 194,
  "push_empty_string": 195,
  "get_loc8": 196,
  "put_loc8": 197,
  "set_loc8": 198,
  "get_loc0": 199,
  "get_loc1": 200,
  "get_loc2": 201,
  "get_loc3": 202,
  "put_loc0": 203,
  "put_loc1": 204,
  "put_loc2": 205,
  "put_loc3": 206,
  "set_loc0": 207,
  "set_loc1": 208,
  "set_loc2": 209,
  "set_loc3": 210,
  "get_arg0": 211,
  "get_arg1": 212,
  "get_arg2": 213,
  "get_arg3": 214,
  "put_arg0": 215,
  "put_arg1": 216,
  "put_arg2": 217,
  "put_arg3": 218,
  "set_arg0": 219,
  "set_arg1": 220,
  "set_arg2": 221,
  "set_arg3": 222,
  "get_var_ref0": 223,
  "get_var_ref1": 224,
  "get_var_ref2": 225,
  "get_var_ref3": 226,
  "put_var_ref0": 227,
  "put_var_ref1": 228,
  "put_var_ref2": 229,
  "put_var_ref3": 230,
  "set_var_ref0": 231,
  "set_var_ref1": 232,
  "set_var_ref2": 233,
  "set_var_ref3": 234,
  "get_length": 235,
  "if_false8": 236,
  "if_true8": 237,
  "goto8": 238,
  "goto16": 239,
  "call0": 240,
  "call1": 241,
  "call2": 242,
  "call3": 243,
  "is_undefined": 244,
  "is_null": 245,
  "typeof_is_undefined": 246,
  "typeof_is_function": 247,
  "get_field_ic": 248,
  "get_field2_ic": 249,
  "put_field_ic": 250,
  "debugger": 251,
}

export enum JSAtom {
  JSAtom_null = 1,
  JSAtom_false = 2,
  JSAtom_true = 3,
  JSAtom_if = 4,
  JSAtom_else = 5,
  JSAtom_return = 6,
  JSAtom_var = 7,
  JSAtom_this = 8,
  JSAtom_delete = 9,
  JSAtom_void = 10,
  JSAtom_typeof = 11,
  JSAtom_new = 12,
  JSAtom_in = 13,
  JSAtom_instanceof = 14,
  JSAtom_do = 15,
  JSAtom_while = 16,
  JSAtom_for = 17,
  JSAtom_break = 18,
  JSAtom_continue = 19,
  JSAtom_switch = 20,
  JSAtom_case = 21,
  JSAtom_default = 22,
  JSAtom_throw = 23,
  JSAtom_try = 24,
  JSAtom_catch = 25,
  JSAtom_finally = 26,
  JSAtom_function = 27,
  JSAtom_debugger = 28,
  JSAtom_with = 29,
  JSAtom_class = 30,
  JSAtom_const = 31,
  JSAtom_enum = 32,
  JSAtom_export = 33,
  JSAtom_extends = 34,
  JSAtom_import = 35,
  JSAtom_super = 36,
  JSAtom_implements = 37,
  JSAtom_interface = 38,
  JSAtom_let = 39,
  JSAtom_package = 40,
  JSAtom_private = 41,
  JSAtom_protected = 42,
  JSAtom_public = 43,
  JSAtom_static = 44,
  JSAtom_yield = 45,
  JSAtom_await = 46,
  JSAtom_empty_string = 47,
  JSAtom_length = 48,
  JSAtom_fileName = 49,
  JSAtom_lineNumber = 50,
  JSAtom_columnNumber = 51,
  JSAtom_message = 52,
  JSAtom_cause = 53,
  JSAtom_errors = 54,
  JSAtom_stack = 55,
  JSAtom_name = 56,
  JSAtom_toString = 57,
  JSAtom_toLocaleString = 58,
  JSAtom_valueOf = 59,
  JSAtom_eval = 60,
  JSAtom_prototype = 61,
  JSAtom_constructor = 62,
  JSAtom_configurable = 63,
  JSAtom_writable = 64,
  JSAtom_enumerable = 65,
  JSAtom_value = 66,
  JSAtom_get = 67,
  JSAtom_set = 68,
  JSAtom_of = 69,
  JSAtom___proto__ = 70,
  JSAtom_undefined = 71,
  JSAtom_number = 72,
  JSAtom_boolean = 73,
  JSAtom_string = 74,
  JSAtom_object = 75,
  JSAtom_symbol = 76,
  JSAtom_integer = 77,
  JSAtom_unknown = 78,
  JSAtom_arguments = 79,
  JSAtom_callee = 80,
  JSAtom_caller = 81,
  JSAtom__eval_ = 82,
  JSAtom__ret_ = 83,
  JSAtom__var_ = 84,
  JSAtom__arg_var_ = 85,
  JSAtom__with_ = 86,
  JSAtom_lastIndex = 87,
  JSAtom_target = 88,
  JSAtom_index = 89,
  JSAtom_input = 90,
  JSAtom_defineProperties = 91,
  JSAtom_apply = 92,
  JSAtom_join = 93,
  JSAtom_concat = 94,
  JSAtom_split = 95,
  JSAtom_construct = 96,
  JSAtom_getPrototypeOf = 97,
  JSAtom_setPrototypeOf = 98,
  JSAtom_isExtensible = 99,
  JSAtom_preventExtensions = 100,
  JSAtom_has = 101,
  JSAtom_deleteProperty = 102,
  JSAtom_defineProperty = 103,
  JSAtom_getOwnPropertyDescriptor = 104,
  JSAtom_ownKeys = 105,
  JSAtom_add = 106,
  JSAtom_done = 107,
  JSAtom_next = 108,
  JSAtom_values = 109,
  JSAtom_source = 110,
  JSAtom_flags = 111,
  JSAtom_global = 112,
  JSAtom_unicode = 113,
  JSAtom_raw = 114,
  JSAtom_new_target = 115,
  JSAtom_this_active_func = 116,
  JSAtom_home_object = 117,
  JSAtom_computed_field = 118,
  JSAtom_static_computed_field = 119,
  JSAtom_class_fields_init = 120,
  JSAtom_brand = 121,
  JSAtom_hash_constructor = 122,
  JSAtom_as = 123,
  JSAtom_from = 124,
  JSAtom_meta = 125,
  JSAtom__default_ = 126,
  JSAtom__star_ = 127,
  JSAtom_Module = 128,
  JSAtom_then = 129,
  JSAtom_resolve = 130,
  JSAtom_reject = 131,
  JSAtom_promise = 132,
  JSAtom_proxy = 133,
  JSAtom_revoke = 134,
  JSAtom_async = 135,
  JSAtom_exec = 136,
  JSAtom_groups = 137,
  JSAtom_indices = 138,
  JSAtom_status = 139,
  JSAtom_reason = 140,
  JSAtom_globalThis = 141,
  JSAtom_bigint = 142,
  JSAtom_minus_zero = 143,
  JSAtom_Infinity = 144,
  JSAtom_minus_Infinity = 145,
  JSAtom_NaN = 146,
  JSAtom_hasIndices = 147,
  JSAtom_ignoreCase = 148,
  JSAtom_multiline = 149,
  JSAtom_dotAll = 150,
  JSAtom_sticky = 151,
  JSAtom_unicodeSets = 152,
  JSAtom_not_equal = 153,
  JSAtom_timed_out = 154,
  JSAtom_ok = 155,
  JSAtom_toJSON = 156,
  JSAtom_Object = 157,
  JSAtom_Array = 158,
  JSAtom_Error = 159,
  JSAtom_Number = 160,
  JSAtom_String = 161,
  JSAtom_Boolean = 162,
  JSAtom_Symbol = 163,
  JSAtom_Arguments = 164,
  JSAtom_Math = 165,
  JSAtom_JSON = 166,
  JSAtom_Date = 167,
  JSAtom_Function = 168,
  JSAtom_GeneratorFunction = 169,
  JSAtom_ForInIterator = 170,
  JSAtom_RegExp = 171,
  JSAtom_ArrayBuffer = 172,
  JSAtom_SharedArrayBuffer = 173,
  JSAtom_Uint8ClampedArray = 174,
  JSAtom_Int8Array = 175,
  JSAtom_Uint8Array = 176,
  JSAtom_Int16Array = 177,
  JSAtom_Uint16Array = 178,
  JSAtom_Int32Array = 179,
  JSAtom_Uint32Array = 180,
  JSAtom_Float16Array = 181,
  JSAtom_Float32Array = 182,
  JSAtom_Float64Array = 183,
  JSAtom_DataView = 184,
  JSAtom_BigInt = 185,
  JSAtom_WeakRef = 186,
  JSAtom_FinalizationRegistry = 187,
  JSAtom_Map = 188,
  JSAtom_Set = 189,
  JSAtom_WeakMap = 190,
  JSAtom_WeakSet = 191,
  JSAtom_Map_Iterator = 192,
  JSAtom_Set_Iterator = 193,
  JSAtom_Array_Iterator = 194,
  JSAtom_String_Iterator = 195,
  JSAtom_RegExp_String_Iterator = 196,
  JSAtom_Generator = 197,
  JSAtom_Proxy = 198,
  JSAtom_Promise = 199,
  JSAtom_PromiseResolveFunction = 200,
  JSAtom_PromiseRejectFunction = 201,
  JSAtom_AsyncFunction = 202,
  JSAtom_AsyncFunctionResolve = 203,
  JSAtom_AsyncFunctionReject = 204,
  JSAtom_AsyncGeneratorFunction = 205,
  JSAtom_AsyncGenerator = 206,
  JSAtom_EvalError = 207,
  JSAtom_RangeError = 208,
  JSAtom_ReferenceError = 209,
  JSAtom_SyntaxError = 210,
  JSAtom_TypeError = 211,
  JSAtom_URIError = 212,
  JSAtom_InternalError = 213,
  JSAtom_Private_brand = 214,
  JSAtom_Symbol_toPrimitive = 215,
  JSAtom_Symbol_iterator = 216,
  JSAtom_Symbol_match = 217,
  JSAtom_Symbol_matchAll = 218,
  JSAtom_Symbol_replace = 219,
  JSAtom_Symbol_search = 220,
  JSAtom_Symbol_split = 221,
  JSAtom_Symbol_toStringTag = 222,
  JSAtom_Symbol_isConcatSpreadable = 223,
  JSAtom_Symbol_hasInstance = 224,
  JSAtom_Symbol_species = 225,
  JSAtom_Symbol_unscopables = 226,
  JSAtom_Symbol_asyncIterator = 227,
}

export const ATOM_STRINGS: Record<number, string> = {
  1: "null",
  2: "false",
  3: "true",
  4: "if",
  5: "else",
  6: "return",
  7: "var",
  8: "this",
  9: "delete",
  10: "void",
  11: "typeof",
  12: "new",
  13: "in",
  14: "instanceof",
  15: "do",
  16: "while",
  17: "for",
  18: "break",
  19: "continue",
  20: "switch",
  21: "case",
  22: "default",
  23: "throw",
  24: "try",
  25: "catch",
  26: "finally",
  27: "function",
  28: "debugger",
  29: "with",
  30: "class",
  31: "const",
  32: "enum",
  33: "export",
  34: "extends",
  35: "import",
  36: "super",
  37: "implements",
  38: "interface",
  39: "let",
  40: "package",
  41: "private",
  42: "protected",
  43: "public",
  44: "static",
  45: "yield",
  46: "await",
  47: "empty_string",
  48: "length",
  49: "fileName",
  50: "lineNumber",
  51: "columnNumber",
  52: "message",
  53: "cause",
  54: "errors",
  55: "stack",
  56: "name",
  57: "toString",
  58: "toLocaleString",
  59: "valueOf",
  60: "eval",
  61: "prototype",
  62: "constructor",
  63: "configurable",
  64: "writable",
  65: "enumerable",
  66: "value",
  67: "get",
  68: "set",
  69: "of",
  70: "__proto__",
  71: "undefined",
  72: "number",
  73: "boolean",
  74: "string",
  75: "object",
  76: "symbol",
  77: "integer",
  78: "unknown",
  79: "arguments",
  80: "callee",
  81: "caller",
  82: "_eval_",
  83: "_ret_",
  84: "_var_",
  85: "_arg_var_",
  86: "_with_",
  87: "lastIndex",
  88: "target",
  89: "index",
  90: "input",
  91: "defineProperties",
  92: "apply",
  93: "join",
  94: "concat",
  95: "split",
  96: "construct",
  97: "getPrototypeOf",
  98: "setPrototypeOf",
  99: "isExtensible",
  100: "preventExtensions",
  101: "has",
  102: "deleteProperty",
  103: "defineProperty",
  104: "getOwnPropertyDescriptor",
  105: "ownKeys",
  106: "add",
  107: "done",
  108: "next",
  109: "values",
  110: "source",
  111: "flags",
  112: "global",
  113: "unicode",
  114: "raw",
  115: "new_target",
  116: "this_active_func",
  117: "home_object",
  118: "computed_field",
  119: "static_computed_field",
  120: "class_fields_init",
  121: "brand",
  122: "hash_constructor",
  123: "as",
  124: "from",
  125: "meta",
  126: "_default_",
  127: "_star_",
  128: "Module",
  129: "then",
  130: "resolve",
  131: "reject",
  132: "promise",
  133: "proxy",
  134: "revoke",
  135: "async",
  136: "exec",
  137: "groups",
  138: "indices",
  139: "status",
  140: "reason",
  141: "globalThis",
  142: "bigint",
  143: "minus_zero",
  144: "Infinity",
  145: "minus_Infinity",
  146: "NaN",
  147: "hasIndices",
  148: "ignoreCase",
  149: "multiline",
  150: "dotAll",
  151: "sticky",
  152: "unicodeSets",
  153: "not_equal",
  154: "timed_out",
  155: "ok",
  156: "toJSON",
  157: "Object",
  158: "Array",
  159: "Error",
  160: "Number",
  161: "String",
  162: "Boolean",
  163: "Symbol",
  164: "Arguments",
  165: "Math",
  166: "JSON",
  167: "Date",
  168: "Function",
  169: "GeneratorFunction",
  170: "ForInIterator",
  171: "RegExp",
  172: "ArrayBuffer",
  173: "SharedArrayBuffer",
  174: "Uint8ClampedArray",
  175: "Int8Array",
  176: "Uint8Array",
  177: "Int16Array",
  178: "Uint16Array",
  179: "Int32Array",
  180: "Uint32Array",
  181: "Float16Array",
  182: "Float32Array",
  183: "Float64Array",
  184: "DataView",
  185: "BigInt",
  186: "WeakRef",
  187: "FinalizationRegistry",
  188: "Map",
  189: "Set",
  190: "WeakMap",
  191: "WeakSet",
  192: "Map_Iterator",
  193: "Set_Iterator",
  194: "Array_Iterator",
  195: "String_Iterator",
  196: "RegExp_String_Iterator",
  197: "Generator",
  198: "Proxy",
  199: "Promise",
  200: "PromiseResolveFunction",
  201: "PromiseRejectFunction",
  202: "AsyncFunction",
  203: "AsyncFunctionResolve",
  204: "AsyncFunctionReject",
  205: "AsyncGeneratorFunction",
  206: "AsyncGenerator",
  207: "EvalError",
  208: "RangeError",
  209: "ReferenceError",
  210: "SyntaxError",
  211: "TypeError",
  212: "URIError",
  213: "InternalError",
  214: "Private_brand",
  215: "Symbol_toPrimitive",
  216: "Symbol_iterator",
  217: "Symbol_match",
  218: "Symbol_matchAll",
  219: "Symbol_replace",
  220: "Symbol_search",
  221: "Symbol_split",
  222: "Symbol_toStringTag",
  223: "Symbol_isConcatSpreadable",
  224: "Symbol_hasInstance",
  225: "Symbol_species",
  226: "Symbol_unscopables",
  227: "Symbol_asyncIterator",
}

export interface OpcodeDefinition {
  id: string
  size: number
  nPop: number
  nPush: number
  format: OpFormat
}

export const OPCODE_DEFS: Record<string, OpcodeDefinition> = {
  OP_invalid: { id: "invalid", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
  OP_push_i32: { id: "push_i32", size: 5, nPop: 0, nPush: 1, format: OpFormat.i32 },
  OP_push_const: { id: "push_const", size: 5, nPop: 0, nPush: 1, format: OpFormat.const },
  OP_fclosure: { id: "fclosure", size: 5, nPop: 0, nPush: 1, format: OpFormat.const },
  OP_push_atom_value: { id: "push_atom_value", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_private_symbol: { id: "private_symbol", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_undefined: { id: "undefined", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_null: { id: "null", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_push_this: { id: "push_this", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_push_false: { id: "push_false", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_push_true: { id: "push_true", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_object: { id: "object", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_special_object: { id: "special_object", size: 2, nPop: 0, nPush: 1, format: OpFormat.u8 },
  OP_rest: { id: "rest", size: 3, nPop: 0, nPush: 1, format: OpFormat.u16 },
  OP_drop: { id: "drop", size: 1, nPop: 1, nPush: 0, format: OpFormat.none },
  OP_nip: { id: "nip", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_nip1: { id: "nip1", size: 1, nPop: 3, nPush: 2, format: OpFormat.none },
  OP_dup: { id: "dup", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_dup1: { id: "dup1", size: 1, nPop: 2, nPush: 3, format: OpFormat.none },
  OP_dup2: { id: "dup2", size: 1, nPop: 2, nPush: 4, format: OpFormat.none },
  OP_dup3: { id: "dup3", size: 1, nPop: 3, nPush: 6, format: OpFormat.none },
  OP_insert2: { id: "insert2", size: 1, nPop: 2, nPush: 3, format: OpFormat.none },
  OP_insert3: { id: "insert3", size: 1, nPop: 3, nPush: 4, format: OpFormat.none },
  OP_insert4: { id: "insert4", size: 1, nPop: 4, nPush: 5, format: OpFormat.none },
  OP_perm3: { id: "perm3", size: 1, nPop: 3, nPush: 3, format: OpFormat.none },
  OP_perm4: { id: "perm4", size: 1, nPop: 4, nPush: 4, format: OpFormat.none },
  OP_perm5: { id: "perm5", size: 1, nPop: 5, nPush: 5, format: OpFormat.none },
  OP_swap: { id: "swap", size: 1, nPop: 2, nPush: 2, format: OpFormat.none },
  OP_swap2: { id: "swap2", size: 1, nPop: 4, nPush: 4, format: OpFormat.none },
  OP_rot3l: { id: "rot3l", size: 1, nPop: 3, nPush: 3, format: OpFormat.none },
  OP_rot3r: { id: "rot3r", size: 1, nPop: 3, nPush: 3, format: OpFormat.none },
  OP_rot4l: { id: "rot4l", size: 1, nPop: 4, nPush: 4, format: OpFormat.none },
  OP_rot5l: { id: "rot5l", size: 1, nPop: 5, nPush: 5, format: OpFormat.none },
  OP_call_constructor: { id: "call_constructor", size: 3, nPop: 2, nPush: 1, format: OpFormat.npop },
  OP_call: { id: "call", size: 3, nPop: 1, nPush: 1, format: OpFormat.npop },
  OP_tail_call: { id: "tail_call", size: 3, nPop: 1, nPush: 0, format: OpFormat.npop },
  OP_call_method: { id: "call_method", size: 3, nPop: 2, nPush: 1, format: OpFormat.npop },
  OP_tail_call_method: { id: "tail_call_method", size: 3, nPop: 2, nPush: 0, format: OpFormat.npop },
  OP_array_from: { id: "array_from", size: 3, nPop: 0, nPush: 1, format: OpFormat.npop },
  OP_apply: { id: "apply", size: 3, nPop: 3, nPush: 1, format: OpFormat.u16 },
  OP_return: { id: "return", size: 1, nPop: 1, nPush: 0, format: OpFormat.none },
  OP_return_undef: { id: "return_undef", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
  OP_check_ctor_return: { id: "check_ctor_return", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_check_ctor: { id: "check_ctor", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
  OP_init_ctor: { id: "init_ctor", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_check_brand: { id: "check_brand", size: 1, nPop: 2, nPush: 2, format: OpFormat.none },
  OP_add_brand: { id: "add_brand", size: 1, nPop: 2, nPush: 0, format: OpFormat.none },
  OP_return_async: { id: "return_async", size: 1, nPop: 1, nPush: 0, format: OpFormat.none },
  OP_throw: { id: "throw", size: 1, nPop: 1, nPush: 0, format: OpFormat.none },
  OP_throw_error: { id: "throw_error", size: 6, nPop: 0, nPush: 0, format: OpFormat.atom_u8 },
  OP_eval: { id: "eval", size: 5, nPop: 1, nPush: 1, format: OpFormat.npop_u16 },
  OP_apply_eval: { id: "apply_eval", size: 3, nPop: 2, nPush: 1, format: OpFormat.u16 },
  OP_regexp: { id: "regexp", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_get_super: { id: "get_super", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_import: { id: "import", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_check_var: { id: "check_var", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_get_var_undef: { id: "get_var_undef", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_get_var: { id: "get_var", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_put_var: { id: "put_var", size: 5, nPop: 1, nPush: 0, format: OpFormat.atom },
  OP_put_var_init: { id: "put_var_init", size: 5, nPop: 1, nPush: 0, format: OpFormat.atom },
  OP_put_var_strict: { id: "put_var_strict", size: 5, nPop: 2, nPush: 0, format: OpFormat.atom },
  OP_get_ref_value: { id: "get_ref_value", size: 1, nPop: 2, nPush: 3, format: OpFormat.none },
  OP_put_ref_value: { id: "put_ref_value", size: 1, nPop: 3, nPush: 0, format: OpFormat.none },
  OP_define_var: { id: "define_var", size: 6, nPop: 0, nPush: 0, format: OpFormat.atom_u8 },
  OP_check_define_var: { id: "check_define_var", size: 6, nPop: 0, nPush: 0, format: OpFormat.atom_u8 },
  OP_define_func: { id: "define_func", size: 6, nPop: 1, nPush: 0, format: OpFormat.atom_u8 },
  OP_get_field: { id: "get_field", size: 5, nPop: 1, nPush: 1, format: OpFormat.atom },
  OP_get_field2: { id: "get_field2", size: 5, nPop: 1, nPush: 2, format: OpFormat.atom },
  OP_put_field: { id: "put_field", size: 5, nPop: 2, nPush: 0, format: OpFormat.atom },
  OP_get_private_field: { id: "get_private_field", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_put_private_field: { id: "put_private_field", size: 1, nPop: 3, nPush: 0, format: OpFormat.none },
  OP_define_private_field: { id: "define_private_field", size: 1, nPop: 3, nPush: 1, format: OpFormat.none },
  OP_get_array_el: { id: "get_array_el", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_get_array_el2: { id: "get_array_el2", size: 1, nPop: 2, nPush: 2, format: OpFormat.none },
  OP_get_array_el3: { id: "get_array_el3", size: 1, nPop: 2, nPush: 3, format: OpFormat.none },
  OP_put_array_el: { id: "put_array_el", size: 1, nPop: 3, nPush: 0, format: OpFormat.none },
  OP_get_super_value: { id: "get_super_value", size: 1, nPop: 3, nPush: 1, format: OpFormat.none },
  OP_put_super_value: { id: "put_super_value", size: 1, nPop: 4, nPush: 0, format: OpFormat.none },
  OP_define_field: { id: "define_field", size: 5, nPop: 2, nPush: 1, format: OpFormat.atom },
  OP_set_name: { id: "set_name", size: 5, nPop: 1, nPush: 1, format: OpFormat.atom },
  OP_set_name_computed: { id: "set_name_computed", size: 1, nPop: 2, nPush: 2, format: OpFormat.none },
  OP_set_proto: { id: "set_proto", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_set_home_object: { id: "set_home_object", size: 1, nPop: 2, nPush: 2, format: OpFormat.none },
  OP_define_array_el: { id: "define_array_el", size: 1, nPop: 3, nPush: 2, format: OpFormat.none },
  OP_append: { id: "append", size: 1, nPop: 3, nPush: 2, format: OpFormat.none },
  OP_copy_data_properties: { id: "copy_data_properties", size: 2, nPop: 3, nPush: 3, format: OpFormat.u8 },
  OP_define_method: { id: "define_method", size: 6, nPop: 2, nPush: 1, format: OpFormat.atom_u8 },
  OP_define_method_computed: { id: "define_method_computed", size: 2, nPop: 3, nPush: 1, format: OpFormat.u8 },
  OP_define_class: { id: "define_class", size: 6, nPop: 2, nPush: 2, format: OpFormat.atom_u8 },
  OP_define_class_computed: { id: "define_class_computed", size: 6, nPop: 3, nPush: 3, format: OpFormat.atom_u8 },
  OP_get_loc: { id: "get_loc", size: 3, nPop: 0, nPush: 1, format: OpFormat.loc },
  OP_put_loc: { id: "put_loc", size: 3, nPop: 1, nPush: 0, format: OpFormat.loc },
  OP_set_loc: { id: "set_loc", size: 3, nPop: 1, nPush: 1, format: OpFormat.loc },
  OP_get_arg: { id: "get_arg", size: 3, nPop: 0, nPush: 1, format: OpFormat.arg },
  OP_put_arg: { id: "put_arg", size: 3, nPop: 1, nPush: 0, format: OpFormat.arg },
  OP_set_arg: { id: "set_arg", size: 3, nPop: 1, nPush: 1, format: OpFormat.arg },
  OP_get_var_ref: { id: "get_var_ref", size: 3, nPop: 0, nPush: 1, format: OpFormat.var_ref },
  OP_put_var_ref: { id: "put_var_ref", size: 3, nPop: 1, nPush: 0, format: OpFormat.var_ref },
  OP_set_var_ref: { id: "set_var_ref", size: 3, nPop: 1, nPush: 1, format: OpFormat.var_ref },
  OP_set_loc_uninitialized: { id: "set_loc_uninitialized", size: 3, nPop: 0, nPush: 0, format: OpFormat.loc },
  OP_get_loc_check: { id: "get_loc_check", size: 3, nPop: 0, nPush: 1, format: OpFormat.loc },
  OP_put_loc_check: { id: "put_loc_check", size: 3, nPop: 1, nPush: 0, format: OpFormat.loc },
  OP_put_loc_check_init: { id: "put_loc_check_init", size: 3, nPop: 1, nPush: 0, format: OpFormat.loc },
  OP_get_loc_checkthis: { id: "get_loc_checkthis", size: 3, nPop: 0, nPush: 1, format: OpFormat.loc },
  OP_get_var_ref_check: { id: "get_var_ref_check", size: 3, nPop: 0, nPush: 1, format: OpFormat.var_ref },
  OP_put_var_ref_check: { id: "put_var_ref_check", size: 3, nPop: 1, nPush: 0, format: OpFormat.var_ref },
  OP_put_var_ref_check_init: { id: "put_var_ref_check_init", size: 3, nPop: 1, nPush: 0, format: OpFormat.var_ref },
  OP_close_loc: { id: "close_loc", size: 3, nPop: 0, nPush: 0, format: OpFormat.loc },
  OP_if_false: { id: "if_false", size: 5, nPop: 1, nPush: 0, format: OpFormat.label },
  OP_if_true: { id: "if_true", size: 5, nPop: 1, nPush: 0, format: OpFormat.label },
  OP_goto: { id: "goto", size: 5, nPop: 0, nPush: 0, format: OpFormat.label },
  OP_catch: { id: "catch", size: 5, nPop: 0, nPush: 1, format: OpFormat.label },
  OP_gosub: { id: "gosub", size: 5, nPop: 0, nPush: 0, format: OpFormat.label },
  OP_ret: { id: "ret", size: 1, nPop: 1, nPush: 0, format: OpFormat.none },
  OP_nip_catch: { id: "nip_catch", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_to_object: { id: "to_object", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_to_propkey: { id: "to_propkey", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_with_get_var: { id: "with_get_var", size: 10, nPop: 1, nPush: 0, format: OpFormat.atom_label_u8 },
  OP_with_put_var: { id: "with_put_var", size: 10, nPop: 2, nPush: 1, format: OpFormat.atom_label_u8 },
  OP_with_delete_var: { id: "with_delete_var", size: 10, nPop: 1, nPush: 0, format: OpFormat.atom_label_u8 },
  OP_with_make_ref: { id: "with_make_ref", size: 10, nPop: 1, nPush: 0, format: OpFormat.atom_label_u8 },
  OP_with_get_ref: { id: "with_get_ref", size: 10, nPop: 1, nPush: 0, format: OpFormat.atom_label_u8 },
  OP_make_loc_ref: { id: "make_loc_ref", size: 7, nPop: 0, nPush: 2, format: OpFormat.atom_u16 },
  OP_make_arg_ref: { id: "make_arg_ref", size: 7, nPop: 0, nPush: 2, format: OpFormat.atom_u16 },
  OP_make_var_ref_ref: { id: "make_var_ref_ref", size: 7, nPop: 0, nPush: 2, format: OpFormat.atom_u16 },
  OP_make_var_ref: { id: "make_var_ref", size: 5, nPop: 0, nPush: 2, format: OpFormat.atom },
  OP_for_in_start: { id: "for_in_start", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_for_of_start: { id: "for_of_start", size: 1, nPop: 1, nPush: 3, format: OpFormat.none },
  OP_for_await_of_start: { id: "for_await_of_start", size: 1, nPop: 1, nPush: 3, format: OpFormat.none },
  OP_for_in_next: { id: "for_in_next", size: 1, nPop: 1, nPush: 3, format: OpFormat.none },
  OP_for_of_next: { id: "for_of_next", size: 2, nPop: 3, nPush: 5, format: OpFormat.u8 },
  OP_for_await_of_next: { id: "for_await_of_next", size: 1, nPop: 3, nPush: 4, format: OpFormat.none },
  OP_iterator_check_object: { id: "iterator_check_object", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_iterator_get_value_done: { id: "iterator_get_value_done", size: 1, nPop: 2, nPush: 3, format: OpFormat.none },
  OP_iterator_close: { id: "iterator_close", size: 1, nPop: 3, nPush: 0, format: OpFormat.none },
  OP_iterator_next: { id: "iterator_next", size: 1, nPop: 4, nPush: 4, format: OpFormat.none },
  OP_iterator_call: { id: "iterator_call", size: 2, nPop: 4, nPush: 5, format: OpFormat.u8 },
  OP_initial_yield: { id: "initial_yield", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
  OP_yield: { id: "yield", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_yield_star: { id: "yield_star", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_async_yield_star: { id: "async_yield_star", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_await: { id: "await", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_neg: { id: "neg", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_plus: { id: "plus", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_dec: { id: "dec", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_inc: { id: "inc", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_post_dec: { id: "post_dec", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_post_inc: { id: "post_inc", size: 1, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_dec_loc: { id: "dec_loc", size: 2, nPop: 0, nPush: 0, format: OpFormat.loc8 },
  OP_inc_loc: { id: "inc_loc", size: 2, nPop: 0, nPush: 0, format: OpFormat.loc8 },
  OP_add_loc: { id: "add_loc", size: 2, nPop: 1, nPush: 0, format: OpFormat.loc8 },
  OP_not: { id: "not", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_lnot: { id: "lnot", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_typeof: { id: "typeof", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_delete: { id: "delete", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_delete_var: { id: "delete_var", size: 5, nPop: 0, nPush: 1, format: OpFormat.atom },
  OP_mul: { id: "mul", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_div: { id: "div", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_mod: { id: "mod", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_add: { id: "add", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_sub: { id: "sub", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_pow: { id: "pow", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_shl: { id: "shl", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_sar: { id: "sar", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_shr: { id: "shr", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_lt: { id: "lt", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_lte: { id: "lte", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_gt: { id: "gt", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_gte: { id: "gte", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_instanceof: { id: "instanceof", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_in: { id: "in", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_eq: { id: "eq", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_neq: { id: "neq", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_strict_eq: { id: "strict_eq", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_strict_neq: { id: "strict_neq", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_and: { id: "and", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_xor: { id: "xor", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_or: { id: "or", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_is_undefined_or_null: { id: "is_undefined_or_null", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_private_in: { id: "private_in", size: 1, nPop: 2, nPush: 1, format: OpFormat.none },
  OP_push_bigint_i32: { id: "push_bigint_i32", size: 5, nPop: 0, nPush: 1, format: OpFormat.i32 },
  OP_nop: { id: "nop", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
  OP_push_minus1: { id: "push_minus1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_0: { id: "push_0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_1: { id: "push_1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_2: { id: "push_2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_3: { id: "push_3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_4: { id: "push_4", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_5: { id: "push_5", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_6: { id: "push_6", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_7: { id: "push_7", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_i8: { id: "push_i8", size: 2, nPop: 0, nPush: 1, format: OpFormat.i8 },
  OP_push_i16: { id: "push_i16", size: 3, nPop: 0, nPush: 1, format: OpFormat.i16 },
  OP_push_const8: { id: "push_const8", size: 2, nPop: 0, nPush: 1, format: OpFormat.const8 },
  OP_fclosure8: { id: "fclosure8", size: 2, nPop: 0, nPush: 1, format: OpFormat.const8 },
  OP_push_empty_string: { id: "push_empty_string", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_get_loc8: { id: "get_loc8", size: 2, nPop: 0, nPush: 1, format: OpFormat.loc8 },
  OP_put_loc8: { id: "put_loc8", size: 2, nPop: 1, nPush: 0, format: OpFormat.loc8 },
  OP_set_loc8: { id: "set_loc8", size: 2, nPop: 1, nPush: 1, format: OpFormat.loc8 },
  OP_get_loc0: { id: "get_loc0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc1: { id: "get_loc1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc2: { id: "get_loc2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc3: { id: "get_loc3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_put_loc0: { id: "put_loc0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc1: { id: "put_loc1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc2: { id: "put_loc2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc3: { id: "put_loc3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_set_loc0: { id: "set_loc0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc1: { id: "set_loc1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc2: { id: "set_loc2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc3: { id: "set_loc3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_get_arg0: { id: "get_arg0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg1: { id: "get_arg1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg2: { id: "get_arg2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg3: { id: "get_arg3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_put_arg0: { id: "put_arg0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg1: { id: "put_arg1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg2: { id: "put_arg2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg3: { id: "put_arg3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_set_arg0: { id: "set_arg0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg1: { id: "set_arg1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg2: { id: "set_arg2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg3: { id: "set_arg3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_get_var_ref0: { id: "get_var_ref0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref1: { id: "get_var_ref1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref2: { id: "get_var_ref2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref3: { id: "get_var_ref3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_put_var_ref0: { id: "put_var_ref0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref1: { id: "put_var_ref1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref2: { id: "put_var_ref2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref3: { id: "put_var_ref3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_set_var_ref0: { id: "set_var_ref0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref1: { id: "set_var_ref1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref2: { id: "set_var_ref2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref3: { id: "set_var_ref3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_length: { id: "get_length", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_if_false8: { id: "if_false8", size: 2, nPop: 1, nPush: 0, format: OpFormat.label8 },
  OP_if_true8: { id: "if_true8", size: 2, nPop: 1, nPush: 0, format: OpFormat.label8 },
  OP_goto8: { id: "goto8", size: 2, nPop: 0, nPush: 0, format: OpFormat.label8 },
  OP_goto16: { id: "goto16", size: 3, nPop: 0, nPush: 0, format: OpFormat.label16 },
  OP_call0: { id: "call0", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call1: { id: "call1", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call2: { id: "call2", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call3: { id: "call3", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_is_undefined: { id: "is_undefined", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_is_null: { id: "is_null", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_typeof_is_undefined: { id: "typeof_is_undefined", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_typeof_is_function: { id: "typeof_is_function", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_get_field_ic: { id: "get_field_ic", size: 5, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_get_field2_ic: { id: "get_field2_ic", size: 5, nPop: 1, nPush: 2, format: OpFormat.none },
  OP_put_field_ic: { id: "put_field_ic", size: 5, nPop: 2, nPush: 0, format: OpFormat.none },
  OP_debugger: { id: "debugger", size: 1, nPop: 0, nPush: 0, format: OpFormat.none },
}

export const SHORT_OPCODE_DEFS: Record<string, OpcodeDefinition> = {
  OP_push_minus1: { id: "push_minus1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_0: { id: "push_0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_1: { id: "push_1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_2: { id: "push_2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_3: { id: "push_3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_4: { id: "push_4", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_5: { id: "push_5", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_6: { id: "push_6", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_7: { id: "push_7", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_int },
  OP_push_i8: { id: "push_i8", size: 2, nPop: 0, nPush: 1, format: OpFormat.i8 },
  OP_push_i16: { id: "push_i16", size: 3, nPop: 0, nPush: 1, format: OpFormat.i16 },
  OP_push_const8: { id: "push_const8", size: 2, nPop: 0, nPush: 1, format: OpFormat.const8 },
  OP_fclosure8: { id: "fclosure8", size: 2, nPop: 0, nPush: 1, format: OpFormat.const8 },
  OP_push_empty_string: { id: "push_empty_string", size: 1, nPop: 0, nPush: 1, format: OpFormat.none },
  OP_get_loc8: { id: "get_loc8", size: 2, nPop: 0, nPush: 1, format: OpFormat.loc8 },
  OP_put_loc8: { id: "put_loc8", size: 2, nPop: 1, nPush: 0, format: OpFormat.loc8 },
  OP_set_loc8: { id: "set_loc8", size: 2, nPop: 1, nPush: 1, format: OpFormat.loc8 },
  OP_get_loc0: { id: "get_loc0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc1: { id: "get_loc1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc2: { id: "get_loc2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_get_loc3: { id: "get_loc3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_loc },
  OP_put_loc0: { id: "put_loc0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc1: { id: "put_loc1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc2: { id: "put_loc2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_put_loc3: { id: "put_loc3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_loc },
  OP_set_loc0: { id: "set_loc0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc1: { id: "set_loc1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc2: { id: "set_loc2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_set_loc3: { id: "set_loc3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_loc },
  OP_get_arg0: { id: "get_arg0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg1: { id: "get_arg1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg2: { id: "get_arg2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_get_arg3: { id: "get_arg3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_arg },
  OP_put_arg0: { id: "put_arg0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg1: { id: "put_arg1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg2: { id: "put_arg2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_put_arg3: { id: "put_arg3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_arg },
  OP_set_arg0: { id: "set_arg0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg1: { id: "set_arg1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg2: { id: "set_arg2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_set_arg3: { id: "set_arg3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_arg },
  OP_get_var_ref0: { id: "get_var_ref0", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref1: { id: "get_var_ref1", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref2: { id: "get_var_ref2", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_var_ref3: { id: "get_var_ref3", size: 1, nPop: 0, nPush: 1, format: OpFormat.none_var_ref },
  OP_put_var_ref0: { id: "put_var_ref0", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref1: { id: "put_var_ref1", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref2: { id: "put_var_ref2", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_put_var_ref3: { id: "put_var_ref3", size: 1, nPop: 1, nPush: 0, format: OpFormat.none_var_ref },
  OP_set_var_ref0: { id: "set_var_ref0", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref1: { id: "set_var_ref1", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref2: { id: "set_var_ref2", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_set_var_ref3: { id: "set_var_ref3", size: 1, nPop: 1, nPush: 1, format: OpFormat.none_var_ref },
  OP_get_length: { id: "get_length", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_if_false8: { id: "if_false8", size: 2, nPop: 1, nPush: 0, format: OpFormat.label8 },
  OP_if_true8: { id: "if_true8", size: 2, nPop: 1, nPush: 0, format: OpFormat.label8 },
  OP_goto8: { id: "goto8", size: 2, nPop: 0, nPush: 0, format: OpFormat.label8 },
  OP_goto16: { id: "goto16", size: 3, nPop: 0, nPush: 0, format: OpFormat.label16 },
  OP_call0: { id: "call0", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call1: { id: "call1", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call2: { id: "call2", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_call3: { id: "call3", size: 1, nPop: 1, nPush: 1, format: OpFormat.npopx },
  OP_is_undefined: { id: "is_undefined", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_is_null: { id: "is_null", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_typeof_is_undefined: { id: "typeof_is_undefined", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
  OP_typeof_is_function: { id: "typeof_is_function", size: 1, nPop: 1, nPush: 1, format: OpFormat.none },
}

export interface Env {
  bytecodeVersion: number
  compileOptions: number
  firstAtomId: number
  supportsShortOpcodes: boolean
}

export const env = {
  bytecodeVersion: 5,
  compileOptions: 1,
  firstAtomId: 228,
  supportsShortOpcodes: true,
} as const
