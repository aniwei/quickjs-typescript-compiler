export const FUN_FLAG_STRICT = 1 << 0
export const FUN_FLAG_ARROW  = 1 << 4

export const FUN_KIND_BYTECODE = 0 // function/script
export const FUN_KIND_MODULE  = 1  // module

// Magic/version auto-aligned via .env.quickjs generated by scripts/auto-align-quickjs.ts
function parseHexOrDec(s: string): number {
  if (/^0x/i.test(s)) return Number(BigInt(s))
  return parseInt(s, 10)
}
const DEFAULT_MAGIC   = 0x514A4243 // 'QJBC' (override via env)
const DEFAULT_VERSION = 0x00030000

export const BYTECODE_MAGIC =
  process.env.QJS_BC_MAGIC ? parseHexOrDec(process.env.QJS_BC_MAGIC) : DEFAULT_MAGIC

export const BYTECODE_VERSION =
  process.env.QJS_BC_VERSION ? parseHexOrDec(process.env.QJS_BC_VERSION) : DEFAULT_VERSION

// Feature flags from env
export const HAS_GOTO16 = process.env.QJS_HAS_GOTO16 === '1'

// Optional advanced opcodes (await/yield) resolved from env; if not provided, compiler will error on use.
function parseMaybeOpcode(name: string): number | null {
  const v = process.env[name]
  if (!v) {
    return null
  }
  try { 
    return parseHexOrDec(v) 
  } catch { 
    return null 
  }
}
export const OP_AWAIT: number | null = parseMaybeOpcode('QJS_OP_AWAIT') // e.g. 0x00XX
export const OP_YIELD: number | null = parseMaybeOpcode('QJS_OP_YIELD') // e.g. 0x00YY