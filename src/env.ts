// This file is auto-generated by scripts/getEnv.ts
// Do not edit manually.
// Generated at: 2025-09-23T15:18:23.056Z

export enum CompiledFlags {
  COMPILED_FLAG_NONE = 0,
  COMPILED_FLAG_DUMP = 1 << 0,
  COMPILED_FLAG_BIGNUM = 1 << 1,
}

export enum OpFormat {
  NONE = 0,
  NONE_INT = 1,
  NONE_LOC = 2,
  NONE_ARG = 3,
  NONE_VAR_REF = 4,
  U8 = 5,
  I8 = 6,
  LOC8 = 7,
  CONST8 = 8,
  LABEL8 = 9,
  U16 = 10,
  I16 = 11,
  LABEL16 = 12,
  NPOP = 13,
  NPOPX = 14,
  NPOP_U16 = 15,
  LOC = 16,
  ARG = 17,
  VAR_REF = 18,
  U32 = 19,
  I32 = 20,
  CONST = 21,
  LABEL = 22,
  ATOM = 23,
  ATOM_U8 = 24,
  ATOM_U16 = 25,
  ATOM_LABEL_U8 = 26,
  ATOM_LABEL_U16 = 27,
  LABEL_U16 = 28,
}

export enum Opcode {
  INVALID = 0,
  PUSH_I32 = 1,
  PUSH_CONST = 2,
  FCLOSURE = 3,
  PUSH_ATOM_VALUE = 4,
  PRIVATE_SYMBOL = 5,
  UNDEFINED = 6,
  NULL = 7,
  PUSH_THIS = 8,
  PUSH_FALSE = 9,
  PUSH_TRUE = 10,
  OBJECT = 11,
  SPECIAL_OBJECT = 12,
  REST = 13,
  DROP = 14,
  NIP = 15,
  NIP1 = 16,
  DUP = 17,
  DUP1 = 18,
  DUP2 = 19,
  DUP3 = 20,
  INSERT2 = 21,
  INSERT3 = 22,
  INSERT4 = 23,
  PERM3 = 24,
  PERM4 = 25,
  PERM5 = 26,
  SWAP = 27,
  SWAP2 = 28,
  ROT3L = 29,
  ROT3R = 30,
  ROT4L = 31,
  ROT5L = 32,
  CALL_CONSTRUCTOR = 33,
  CALL = 34,
  TAIL_CALL = 35,
  CALL_METHOD = 36,
  TAIL_CALL_METHOD = 37,
  ARRAY_FROM = 38,
  APPLY = 39,
  RETURN = 40,
  RETURN_UNDEF = 41,
  CHECK_CTOR_RETURN = 42,
  CHECK_CTOR = 43,
  INIT_CTOR = 44,
  CHECK_BRAND = 45,
  ADD_BRAND = 46,
  RETURN_ASYNC = 47,
  THROW = 48,
  THROW_ERROR = 49,
  EVAL = 50,
  APPLY_EVAL = 51,
  REGEXP = 52,
  GET_SUPER = 53,
  IMPORT = 54,
  CHECK_VAR = 55,
  GET_VAR_UNDEF = 56,
  GET_VAR = 57,
  PUT_VAR = 58,
  PUT_VAR_INIT = 59,
  PUT_VAR_STRICT = 60,
  GET_REF_VALUE = 61,
  PUT_REF_VALUE = 62,
  DEFINE_VAR = 63,
  CHECK_DEFINE_VAR = 64,
  DEFINE_FUNC = 65,
  GET_FIELD = 66,
  GET_FIELD2 = 67,
  PUT_FIELD = 68,
  GET_PRIVATE_FIELD = 69,
  PUT_PRIVATE_FIELD = 70,
  DEFINE_PRIVATE_FIELD = 71,
  GET_ARRAY_EL = 72,
  GET_ARRAY_EL2 = 73,
  GET_ARRAY_EL3 = 74,
  PUT_ARRAY_EL = 75,
  GET_SUPER_VALUE = 76,
  PUT_SUPER_VALUE = 77,
  DEFINE_FIELD = 78,
  SET_NAME = 79,
  SET_NAME_COMPUTED = 80,
  SET_PROTO = 81,
  SET_HOME_OBJECT = 82,
  DEFINE_ARRAY_EL = 83,
  APPEND = 84,
  COPY_DATA_PROPERTIES = 85,
  DEFINE_METHOD = 86,
  DEFINE_METHOD_COMPUTED = 87,
  DEFINE_CLASS = 88,
  DEFINE_CLASS_COMPUTED = 89,
  GET_LOC = 90,
  PUT_LOC = 91,
  SET_LOC = 92,
  GET_ARG = 93,
  PUT_ARG = 94,
  SET_ARG = 95,
  GET_VAR_REF = 96,
  PUT_VAR_REF = 97,
  SET_VAR_REF = 98,
  SET_LOC_UNINITIALIZED = 99,
  GET_LOC_CHECK = 100,
  PUT_LOC_CHECK = 101,
  PUT_LOC_CHECK_INIT = 102,
  GET_LOC_CHECKTHIS = 103,
  GET_VAR_REF_CHECK = 104,
  PUT_VAR_REF_CHECK = 105,
  PUT_VAR_REF_CHECK_INIT = 106,
  CLOSE_LOC = 107,
  IF_FALSE = 108,
  IF_TRUE = 109,
  GOTO = 110,
  CATCH = 111,
  GOSUB = 112,
  RET = 113,
  NIP_CATCH = 114,
  TO_OBJECT = 115,
  TO_PROPKEY = 116,
  WITH_GET_VAR = 117,
  WITH_PUT_VAR = 118,
  WITH_DELETE_VAR = 119,
  WITH_MAKE_REF = 120,
  WITH_GET_REF = 121,
  MAKE_LOC_REF = 122,
  MAKE_ARG_REF = 123,
  MAKE_VAR_REF_REF = 124,
  MAKE_VAR_REF = 125,
  FOR_IN_START = 126,
  FOR_OF_START = 127,
  FOR_AWAIT_OF_START = 128,
  FOR_IN_NEXT = 129,
  FOR_OF_NEXT = 130,
  FOR_AWAIT_OF_NEXT = 131,
  ITERATOR_CHECK_OBJECT = 132,
  ITERATOR_GET_VALUE_DONE = 133,
  ITERATOR_CLOSE = 134,
  ITERATOR_NEXT = 135,
  ITERATOR_CALL = 136,
  INITIAL_YIELD = 137,
  YIELD = 138,
  YIELD_STAR = 139,
  ASYNC_YIELD_STAR = 140,
  AWAIT = 141,
  NEG = 142,
  PLUS = 143,
  DEC = 144,
  INC = 145,
  POST_DEC = 146,
  POST_INC = 147,
  DEC_LOC = 148,
  INC_LOC = 149,
  ADD_LOC = 150,
  NOT = 151,
  LNOT = 152,
  TYPEOF = 153,
  DELETE = 154,
  DELETE_VAR = 155,
  MUL = 156,
  DIV = 157,
  MOD = 158,
  ADD = 159,
  SUB = 160,
  POW = 161,
  SHL = 162,
  SAR = 163,
  SHR = 164,
  LT = 165,
  LTE = 166,
  GT = 167,
  GTE = 168,
  INSTANCEOF = 169,
  IN = 170,
  EQ = 171,
  NEQ = 172,
  STRICT_EQ = 173,
  STRICT_NEQ = 174,
  AND = 175,
  XOR = 176,
  OR = 177,
  IS_UNDEFINED_OR_NULL = 178,
  PRIVATE_IN = 179,
  PUSH_BIGINT_I32 = 180,
  NOP = 181,
  PUSH_MINUS1 = 182,
  PUSH_0 = 183,
  PUSH_1 = 184,
  PUSH_2 = 185,
  PUSH_3 = 186,
  PUSH_4 = 187,
  PUSH_5 = 188,
  PUSH_6 = 189,
  PUSH_7 = 190,
  PUSH_I8 = 191,
  PUSH_I16 = 192,
  PUSH_CONST8 = 193,
  FCLOSURE8 = 194,
  PUSH_EMPTY_STRING = 195,
  GET_LOC8 = 196,
  PUT_LOC8 = 197,
  SET_LOC8 = 198,
  GET_LOC0 = 199,
  GET_LOC1 = 200,
  GET_LOC2 = 201,
  GET_LOC3 = 202,
  PUT_LOC0 = 203,
  PUT_LOC1 = 204,
  PUT_LOC2 = 205,
  PUT_LOC3 = 206,
  SET_LOC0 = 207,
  SET_LOC1 = 208,
  SET_LOC2 = 209,
  SET_LOC3 = 210,
  GET_ARG0 = 211,
  GET_ARG1 = 212,
  GET_ARG2 = 213,
  GET_ARG3 = 214,
  PUT_ARG0 = 215,
  PUT_ARG1 = 216,
  PUT_ARG2 = 217,
  PUT_ARG3 = 218,
  SET_ARG0 = 219,
  SET_ARG1 = 220,
  SET_ARG2 = 221,
  SET_ARG3 = 222,
  GET_VAR_REF0 = 223,
  GET_VAR_REF1 = 224,
  GET_VAR_REF2 = 225,
  GET_VAR_REF3 = 226,
  PUT_VAR_REF0 = 227,
  PUT_VAR_REF1 = 228,
  PUT_VAR_REF2 = 229,
  PUT_VAR_REF3 = 230,
  SET_VAR_REF0 = 231,
  SET_VAR_REF1 = 232,
  SET_VAR_REF2 = 233,
  SET_VAR_REF3 = 234,
  GET_LENGTH = 235,
  IF_FALSE8 = 236,
  IF_TRUE8 = 237,
  GOTO8 = 238,
  GOTO16 = 239,
  CALL0 = 240,
  CALL1 = 241,
  CALL2 = 242,
  CALL3 = 243,
  IS_UNDEFINED = 244,
  IS_NULL = 245,
  TYPEOF_IS_UNDEFINED = 246,
  TYPEOF_IS_FUNCTION = 247,
  GET_FIELD_IC = 248,
  GET_FIELD2_IC = 249,
  PUT_FIELD_IC = 250,
  DEBUGGER = 251,
}

export enum JSAtom {
  NULL = 1,
  FALSE = 2,
  TRUE = 3,
  IF = 4,
  ELSE = 5,
  RETURN = 6,
  VAR = 7,
  THIS = 8,
  DELETE = 9,
  VOID = 10,
  TYPEOF = 11,
  NEW = 12,
  IN = 13,
  INSTANCEOF = 14,
  DO = 15,
  WHILE = 16,
  FOR = 17,
  BREAK = 18,
  CONTINUE = 19,
  SWITCH = 20,
  CASE = 21,
  DEFAULT = 22,
  THROW = 23,
  TRY = 24,
  CATCH = 25,
  FINALLY = 26,
  FUNCTION = 27,
  DEBUGGER = 28,
  WITH = 29,
  CLASS = 30,
  CONST = 31,
  ENUM = 32,
  EXPORT = 33,
  EXTENDS = 34,
  IMPORT = 35,
  SUPER = 36,
  IMPLEMENTS = 37,
  INTERFACE = 38,
  LET = 39,
  PACKAGE = 40,
  PRIVATE = 41,
  PROTECTED = 42,
  PUBLIC = 43,
  STATIC = 44,
  YIELD = 45,
  AWAIT = 46,
  EMPTY_STRING = 47,
  LENGTH = 48,
  FILENAME = 49,
  LINENUMBER = 50,
  COLUMNNUMBER = 51,
  MESSAGE = 52,
  CAUSE = 53,
  ERRORS = 54,
  STACK = 55,
  NAME = 56,
  TOSTRING = 57,
  TOLOCALESTRING = 58,
  VALUEOF = 59,
  EVAL = 60,
  PROTOTYPE = 61,
  CONSTRUCTOR = 62,
  CONFIGURABLE = 63,
  WRITABLE = 64,
  ENUMERABLE = 65,
  VALUE = 66,
  GET = 67,
  SET = 68,
  OF = 69,
  PROTO = 70,
  UNDEFINED = 71,
  NUMBER = 72,
  BOOLEAN = 73,
  STRING = 74,
  OBJECT = 75,
  SYMBOL = 76,
  INTEGER = 77,
  UNKNOWN = 78,
  ARGUMENTS = 79,
  CALLEE = 80,
  CALLER = 81,
  EVAL_2 = 82,
  RET = 83,
  VAR_2 = 84,
  ARG_VAR = 85,
  WITH_2 = 86,
  LASTINDEX = 87,
  TARGET = 88,
  INDEX = 89,
  INPUT = 90,
  DEFINEPROPERTIES = 91,
  APPLY = 92,
  JOIN = 93,
  CONCAT = 94,
  SPLIT = 95,
  CONSTRUCT = 96,
  GETPROTOTYPEOF = 97,
  SETPROTOTYPEOF = 98,
  ISEXTENSIBLE = 99,
  PREVENTEXTENSIONS = 100,
  HAS = 101,
  DELETEPROPERTY = 102,
  DEFINEPROPERTY = 103,
  GETOWNPROPERTYDESCRIPTOR = 104,
  OWNKEYS = 105,
  ADD = 106,
  DONE = 107,
  NEXT = 108,
  VALUES = 109,
  SOURCE = 110,
  FLAGS = 111,
  GLOBAL = 112,
  UNICODE = 113,
  RAW = 114,
  NEW_TARGET = 115,
  THIS_ACTIVE_FUNC = 116,
  HOME_OBJECT = 117,
  COMPUTED_FIELD = 118,
  STATIC_COMPUTED_FIELD = 119,
  CLASS_FIELDS_INIT = 120,
  BRAND = 121,
  HASH_CONSTRUCTOR = 122,
  AS = 123,
  FROM = 124,
  META = 125,
  DEFAULT_2 = 126,
  STAR = 127,
  MODULE = 128,
  THEN = 129,
  RESOLVE = 130,
  REJECT = 131,
  PROMISE = 132,
  PROXY = 133,
  REVOKE = 134,
  ASYNC = 135,
  EXEC = 136,
  GROUPS = 137,
  INDICES = 138,
  STATUS = 139,
  REASON = 140,
  GLOBALTHIS = 141,
  BIGINT = 142,
  MINUS_ZERO = 143,
  INFINITY = 144,
  MINUS_INFINITY = 145,
  NAN = 146,
  HASINDICES = 147,
  IGNORECASE = 148,
  MULTILINE = 149,
  DOTALL = 150,
  STICKY = 151,
  UNICODESETS = 152,
  NOT_EQUAL = 153,
  TIMED_OUT = 154,
  OK = 155,
  TOJSON = 156,
  OBJECT_2 = 157,
  ARRAY = 158,
  ERROR = 159,
  NUMBER_2 = 160,
  STRING_2 = 161,
  BOOLEAN_2 = 162,
  SYMBOL_2 = 163,
  ARGUMENTS_2 = 164,
  MATH = 165,
  JSON = 166,
  DATE = 167,
  FUNCTION_2 = 168,
  GENERATORFUNCTION = 169,
  FORINITERATOR = 170,
  REGEXP = 171,
  ARRAYBUFFER = 172,
  SHAREDARRAYBUFFER = 173,
  UINT8CLAMPEDARRAY = 174,
  INT8ARRAY = 175,
  UINT8ARRAY = 176,
  INT16ARRAY = 177,
  UINT16ARRAY = 178,
  INT32ARRAY = 179,
  UINT32ARRAY = 180,
  FLOAT16ARRAY = 181,
  FLOAT32ARRAY = 182,
  FLOAT64ARRAY = 183,
  DATAVIEW = 184,
  BIGINT_2 = 185,
  WEAKREF = 186,
  FINALIZATIONREGISTRY = 187,
  MAP = 188,
  SET_2 = 189,
  WEAKMAP = 190,
  WEAKSET = 191,
  MAP_ITERATOR = 192,
  SET_ITERATOR = 193,
  ARRAY_ITERATOR = 194,
  STRING_ITERATOR = 195,
  REGEXP_STRING_ITERATOR = 196,
  GENERATOR = 197,
  PROXY_2 = 198,
  PROMISE_2 = 199,
  PROMISERESOLVEFUNCTION = 200,
  PROMISEREJECTFUNCTION = 201,
  ASYNCFUNCTION = 202,
  ASYNCFUNCTIONRESOLVE = 203,
  ASYNCFUNCTIONREJECT = 204,
  ASYNCGENERATORFUNCTION = 205,
  ASYNCGENERATOR = 206,
  EVALERROR = 207,
  RANGEERROR = 208,
  REFERENCEERROR = 209,
  SYNTAXERROR = 210,
  TYPEERROR = 211,
  URIERROR = 212,
  INTERNALERROR = 213,
  PRIVATE_BRAND = 214,
  SYMBOL_TOPRIMITIVE = 215,
  SYMBOL_ITERATOR = 216,
  SYMBOL_MATCH = 217,
  SYMBOL_MATCHALL = 218,
  SYMBOL_REPLACE = 219,
  SYMBOL_SEARCH = 220,
  SYMBOL_SPLIT = 221,
  SYMBOL_TOSTRINGTAG = 222,
  SYMBOL_ISCONCATSPREADABLE = 223,
  SYMBOL_HASINSTANCE = 224,
  SYMBOL_SPECIES = 225,
  SYMBOL_UNSCOPABLES = 226,
  SYMBOL_ASYNCITERATOR = 227,
}

export interface Env {
  bytecodeVersion: number
  compileOptions: number
  firstAtomId: number
}

export const env = {
  bytecodeVersion: 5,
  compileFlags: 1,
  firstAtomId: 228
} as const
