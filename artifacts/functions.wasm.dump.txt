functions.js:2:8: function: add
  mode: strict
  args: a b
  stack_size: 2
  opcodes:
        get_arg0 0: a
        get_arg1 1: b
        add
        return

functions.js:3:39: function: <null>
  mode: strict
  args: y
  closure vars:
    0: x local:arg0 var
  stack_size: 2
  opcodes:
        get_var_ref0 0: x
        get_arg0 0: y
        add
        return

functions.js:3:8: function: makeAdder
  mode: strict
  args: x
  stack_size: 1
  opcodes:
        fclosure8 0: [bytecode <null>]
        return

functions.js:1:1: function: <eval>
  mode: strict
  closure vars:
    0: add local:loc0 var
    1: makeAdder local:loc1 var
    2: r local:loc2 const
  stack_size: 3
  opcodes:
        push_this
        if_false8 10
        fclosure8 0: [bytecode add]
        put_var_ref0 0: add
        fclosure8 1: [bytecode makeAdder]
        put_var_ref1 1: makeAdder
        return_undef
   10:  get_var_ref0 0: add
        push_2 2
        push_3 3
        call2 2
        get_var_ref1 1: makeAdder
        push_i8 10
        call1 1
        push_5 5
        call1 1
        add
        put_var_ref2 2: r
        undefined
        return_async

